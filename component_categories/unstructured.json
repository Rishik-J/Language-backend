{
  "Unstructured": {
    "template": {
      "_type": "Component",
      "file_path": {
        "trace_as_metadata": true,
        "list": true,
        "list_add_label": "Add More",
        "required": false,
        "placeholder": "",
        "show": true,
        "name": "file_path",
        "value": "",
        "display_name": "Server File Path",
        "advanced": true,
        "input_types": [
          "Data",
          "Message"
        ],
        "dynamic": false,
        "info": "Data object with a 'file_path' property pointing to server file or a Message object with a path to the file. Supercedes 'Path' but supports same file types.",
        "title_case": false,
        "type": "other",
        "_input_type": "HandleInput"
      },
      "path": {
        "trace_as_metadata": true,
        "file_path": "",
        "fileTypes": [
          "bmp",
          "csv",
          "doc",
          "docx",
          "eml",
          "epub",
          "heic",
          "html",
          "jpeg",
          "png",
          "md",
          "msg",
          "odt",
          "org",
          "p7s",
          "pdf",
          "png",
          "ppt",
          "pptx",
          "rst",
          "rtf",
          "tiff",
          "txt",
          "tsv",
          "xls",
          "xlsx",
          "xml",
          "zip",
          "tar",
          "tgz",
          "bz2",
          "gz"
        ],
        "temp_file": false,
        "list": true,
        "list_add_label": "Add More",
        "required": false,
        "placeholder": "",
        "show": true,
        "name": "path",
        "value": [],
        "display_name": "Files",
        "advanced": false,
        "dynamic": false,
        "info": "Supported file extensions: bmp, csv, doc, docx, eml, epub, heic, html, jpeg, png, md, msg, odt, org, p7s, pdf, png, ppt, pptx, rst, rtf, tiff, txt, tsv, xls, xlsx, xml; optionally bundled in file extensions: zip, tar, tgz, bz2, gz",
        "title_case": false,
        "type": "file",
        "_input_type": "FileInput"
      },
      "api_key": {
        "load_from_db": true,
        "required": true,
        "placeholder": "",
        "show": true,
        "name": "api_key",
        "value": "",
        "display_name": "Unstructured.io Serverless API Key",
        "advanced": false,
        "input_types": [],
        "dynamic": false,
        "info": "Unstructured API Key. Create at: https://app.unstructured.io/",
        "title_case": false,
        "password": true,
        "type": "str",
        "_input_type": "SecretStrInput"
      },
      "api_url": {
        "tool_mode": false,
        "trace_as_input": true,
        "trace_as_metadata": true,
        "load_from_db": false,
        "list": false,
        "list_add_label": "Add More",
        "required": false,
        "placeholder": "",
        "show": true,
        "name": "api_url",
        "value": "",
        "display_name": "Unstructured.io API URL",
        "advanced": false,
        "input_types": [
          "Message"
        ],
        "dynamic": false,
        "info": "Unstructured API URL.",
        "title_case": false,
        "type": "str",
        "_input_type": "MessageTextInput"
      },
      "chunking_strategy": {
        "tool_mode": false,
        "trace_as_metadata": true,
        "options": [
          "",
          "basic",
          "by_title",
          "by_page",
          "by_similarity"
        ],
        "options_metadata": [],
        "combobox": false,
        "dialog_inputs": {},
        "toggle": false,
        "required": false,
        "placeholder": "",
        "show": true,
        "name": "chunking_strategy",
        "value": "",
        "display_name": "Chunking Strategy",
        "advanced": false,
        "dynamic": false,
        "info": "Chunking strategy to use, see https://docs.unstructured.io/api-reference/api-services/chunking",
        "real_time_refresh": false,
        "title_case": false,
        "type": "str",
        "_input_type": "DropdownInput"
      },
      "code": {
        "type": "code",
        "required": true,
        "placeholder": "",
        "list": false,
        "show": true,
        "multiline": true,
        "value": "from langchain_unstructured import UnstructuredLoader\n\nfrom langflow.base.data import BaseFileComponent\nfrom langflow.inputs import DropdownInput, MessageTextInput, NestedDictInput, SecretStrInput\nfrom langflow.schema import Data\n\n\nclass UnstructuredComponent(BaseFileComponent):\n    display_name = \"Unstructured API\"\n    description = (\n        \"Uses Unstructured.io API to extract clean text from raw source documents. Supports a wide range of file types.\"\n    )\n    documentation = (\n        \"https://python.langchain.com/api_reference/unstructured/document_loaders/\"\n        \"langchain_unstructured.document_loaders.UnstructuredLoader.html\"\n    )\n    trace_type = \"tool\"\n    icon = \"Unstructured\"\n    name = \"Unstructured\"\n\n    # https://docs.unstructured.io/api-reference/api-services/overview#supported-file-types\n    VALID_EXTENSIONS = [\n        \"bmp\",\n        \"csv\",\n        \"doc\",\n        \"docx\",\n        \"eml\",\n        \"epub\",\n        \"heic\",\n        \"html\",\n        \"jpeg\",\n        \"png\",\n        \"md\",\n        \"msg\",\n        \"odt\",\n        \"org\",\n        \"p7s\",\n        \"pdf\",\n        \"png\",\n        \"ppt\",\n        \"pptx\",\n        \"rst\",\n        \"rtf\",\n        \"tiff\",\n        \"txt\",\n        \"tsv\",\n        \"xls\",\n        \"xlsx\",\n        \"xml\",\n    ]\n\n    inputs = [\n        *BaseFileComponent._base_inputs,\n        SecretStrInput(\n            name=\"api_key\",\n            display_name=\"Unstructured.io Serverless API Key\",\n            required=True,\n            info=\"Unstructured API Key. Create at: https://app.unstructured.io/\",\n        ),\n        MessageTextInput(\n            name=\"api_url\",\n            display_name=\"Unstructured.io API URL\",\n            required=False,\n            info=\"Unstructured API URL.\",\n        ),\n        DropdownInput(\n            name=\"chunking_strategy\",\n            display_name=\"Chunking Strategy\",\n            info=\"Chunking strategy to use, see https://docs.unstructured.io/api-reference/api-services/chunking\",\n            options=[\"\", \"basic\", \"by_title\", \"by_page\", \"by_similarity\"],\n            real_time_refresh=False,\n            value=\"\",\n        ),\n        NestedDictInput(\n            name=\"unstructured_args\",\n            display_name=\"Additional Arguments\",\n            required=False,\n            info=(\n                \"Optional dictionary of additional arguments to the Loader. \"\n                \"See https://docs.unstructured.io/api-reference/api-services/api-parameters for more information.\"\n            ),\n        ),\n    ]\n\n    outputs = [\n        *BaseFileComponent._base_outputs,\n    ]\n\n    def process_files(self, file_list: list[BaseFileComponent.BaseFile]) -> list[BaseFileComponent.BaseFile]:\n        file_paths = [str(file.path) for file in file_list if file.path]\n\n        if not file_paths:\n            self.log(\"No files to process.\")\n            return file_list\n\n        # https://docs.unstructured.io/api-reference/api-services/api-parameters\n        args = self.unstructured_args or {}\n\n        if self.chunking_strategy:\n            args[\"chunking_strategy\"] = self.chunking_strategy\n\n        args[\"api_key\"] = self.api_key\n        args[\"partition_via_api\"] = True\n        if self.api_url:\n            args[\"url\"] = self.api_url\n\n        loader = UnstructuredLoader(\n            file_paths,\n            **args,\n        )\n\n        documents = loader.load()\n\n        processed_data: list[Data | None] = [Data.from_document(doc) if doc else None for doc in documents]\n\n        # Rename the `source` field to `self.SERVER_FILE_PATH_FIELDNAME`, to avoid conflicts with the `source` field\n        for data in processed_data:\n            if data and \"source\" in data.data:\n                data.data[self.SERVER_FILE_PATH_FIELDNAME] = data.data.pop(\"source\")\n\n        return self.rollup_data(file_list, processed_data)\n",
        "fileTypes": [],
        "file_path": "",
        "password": false,
        "name": "code",
        "advanced": true,
        "dynamic": true,
        "info": "",
        "load_from_db": false,
        "title_case": false
      },
      "delete_server_file_after_processing": {
        "tool_mode": false,
        "trace_as_metadata": true,
        "list": false,
        "list_add_label": "Add More",
        "required": false,
        "placeholder": "",
        "show": true,
        "name": "delete_server_file_after_processing",
        "value": true,
        "display_name": "Delete Server File After Processing",
        "advanced": true,
        "dynamic": false,
        "info": "If true, the Server File Path will be deleted after processing.",
        "title_case": false,
        "type": "bool",
        "_input_type": "BoolInput"
      },
      "ignore_unspecified_files": {
        "tool_mode": false,
        "trace_as_metadata": true,
        "list": false,
        "list_add_label": "Add More",
        "required": false,
        "placeholder": "",
        "show": true,
        "name": "ignore_unspecified_files",
        "value": false,
        "display_name": "Ignore Unspecified Files",
        "advanced": true,
        "dynamic": false,
        "info": "If true, Data with no 'file_path' property will be ignored.",
        "title_case": false,
        "type": "bool",
        "_input_type": "BoolInput"
      },
      "ignore_unsupported_extensions": {
        "tool_mode": false,
        "trace_as_metadata": true,
        "list": false,
        "list_add_label": "Add More",
        "required": false,
        "placeholder": "",
        "show": true,
        "name": "ignore_unsupported_extensions",
        "value": true,
        "display_name": "Ignore Unsupported Extensions",
        "advanced": true,
        "dynamic": false,
        "info": "If true, files with unsupported extensions will not be processed.",
        "title_case": false,
        "type": "bool",
        "_input_type": "BoolInput"
      },
      "separator": {
        "tool_mode": false,
        "trace_as_metadata": true,
        "load_from_db": false,
        "list": false,
        "list_add_label": "Add More",
        "required": false,
        "placeholder": "",
        "show": true,
        "name": "separator",
        "value": "\n\n",
        "display_name": "Separator",
        "advanced": true,
        "dynamic": false,
        "info": "Specify the separator to use between multiple outputs in Message format.",
        "title_case": false,
        "type": "str",
        "_input_type": "StrInput"
      },
      "silent_errors": {
        "tool_mode": false,
        "trace_as_metadata": true,
        "list": false,
        "list_add_label": "Add More",
        "required": false,
        "placeholder": "",
        "show": true,
        "name": "silent_errors",
        "value": false,
        "display_name": "Silent Errors",
        "advanced": true,
        "dynamic": false,
        "info": "If true, errors will not raise an exception.",
        "title_case": false,
        "type": "bool",
        "_input_type": "BoolInput"
      },
      "unstructured_args": {
        "tool_mode": false,
        "trace_as_input": true,
        "trace_as_metadata": true,
        "list": false,
        "list_add_label": "Add More",
        "required": false,
        "placeholder": "",
        "show": true,
        "name": "unstructured_args",
        "value": {},
        "display_name": "Additional Arguments",
        "advanced": false,
        "dynamic": false,
        "info": "Optional dictionary of additional arguments to the Loader. See https://docs.unstructured.io/api-reference/api-services/api-parameters for more information.",
        "title_case": false,
        "type": "NestedDict",
        "_input_type": "NestedDictInput"
      }
    },
    "description": "Uses Unstructured.io API to extract clean text from raw source documents. Supports a wide range of file types.",
    "icon": "Unstructured",
    "base_classes": [
      "Data",
      "DataFrame",
      "Message"
    ],
    "display_name": "Unstructured API",
    "documentation": "https://python.langchain.com/api_reference/unstructured/document_loaders/langchain_unstructured.document_loaders.UnstructuredLoader.html",
    "minimized": false,
    "custom_fields": {},
    "output_types": [],
    "pinned": false,
    "conditional_paths": [],
    "frozen": false,
    "outputs": [
      {
        "types": [
          "Data"
        ],
        "selected": "Data",
        "name": "data",
        "display_name": "Data",
        "method": "load_files",
        "value": "__UNDEFINED__",
        "cache": true,
        "required_inputs": [],
        "allows_loop": false,
        "tool_mode": true
      },
      {
        "types": [
          "DataFrame"
        ],
        "selected": "DataFrame",
        "name": "dataframe",
        "display_name": "DataFrame",
        "method": "load_dataframe",
        "value": "__UNDEFINED__",
        "cache": true,
        "required_inputs": [],
        "allows_loop": false,
        "tool_mode": true
      },
      {
        "types": [
          "Message"
        ],
        "selected": "Message",
        "name": "message",
        "display_name": "Message",
        "method": "load_message",
        "value": "__UNDEFINED__",
        "cache": true,
        "required_inputs": [],
        "allows_loop": false,
        "tool_mode": true
      }
    ],
    "field_order": [
      "path",
      "file_path",
      "separator",
      "silent_errors",
      "delete_server_file_after_processing",
      "ignore_unsupported_extensions",
      "ignore_unspecified_files",
      "api_key",
      "api_url",
      "chunking_strategy",
      "unstructured_args"
    ],
    "beta": false,
    "legacy": false,
    "edited": false,
    "metadata": {},
    "tool_mode": false
  }
}